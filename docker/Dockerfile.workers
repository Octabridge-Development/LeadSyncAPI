# Multi-stage build para optimización
FROM python:3.11-slim AS base

# Instalar dependencias del sistema
RUN apt-get update && apt-get install -y \
    gcc \
    curl \
    libpq-dev \
    && rm -rf /var/lib/apt/lists/*

# Eliminar paquetes ODBC conflictivos y luego instalar el driver oficial de Microsoft
RUN apt-get update && \
    apt-get remove -y unixodbc unixodbc-dev libodbc1 libodbcinst2 odbcinst1debian2 || true && \
    apt-get install -y curl gnupg2 && \
    curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add - && \
    curl https://packages.microsoft.com/config/debian/11/prod.list > /etc/apt/sources.list.d/mssql-release.list && \
    apt-get update && \
    ACCEPT_EULA=Y apt-get install -y msodbcsql18 unixodbc unixodbc-dev && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Crear usuario no-root
RUN useradd --create-home --shell /bin/bash app

# Configurar directorio de trabajo
WORKDIR /app

# Copiar requirements y instalar dependencias Python
COPY requirements.txt .
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# Copiar código de la aplicación
COPY app/ ./app/
COPY workers/ ./workers/

# Cambiar a usuario no-root
RUN chown -R app:app /app
USER app

# Comando por defecto para ejecutar ambos workers en paralelo
CMD bash -c "python -m workers.contact_processor & python -m workers.campaign_processor & wait"